// Code generated by protoc-gen-godefaults. DO NOT EDIT.
// versions:
// 		protoc-gen-godefaults 0.0.1
// source: xgo/tests/godefaultstest/godefaults_test.proto

package godefaultstest

import (
	_ "github.com/yu31/protoc-plugin/xgo/pb/pbdefaults"
)

// Set default value for message godefaultstest.Config
func (this *Config) SetDefaults() {
	if this == nil {
		return
	}
	if this.Ip == "" {
		this.Ip = "127.0.0.1"
	}
	if this.Port == 0 {
		this.Port = 80
	}
	return
}

// Set default value for message godefaultstest.LiteralMessage1
func (this *LiteralMessage1) SetDefaults() {
	if this == nil {
		return
	}
	if this.TString1 == "" {
		this.TString1 = "ts1"
	}
	if this.TString2 == "" {
		this.TString2 = ""
	}
	if this.TString3 == "" {
		this.TString3 = "\"\""
	}
	if this.TString4 == "" {
		this.TString4 = "\""
	}
	if this.TString5 == "" {
		this.TString5 = "\"ts5\""
	}
	if this.TString6 == "" {
		this.TString6 = "\"ts\"6\""
	}
	if this.TString7 == "" {
		this.TString7 = "\"ts\"7\""
	}
	if this.TString8 == "" {
		this.TString8 = "[ts8]"
	}
	if this.TString9 == "" {
		this.TString9 = "{ts9}"
	}
	if this.TInt32 == 0 {
		this.TInt32 = 1
	}
	if this.TInt64 == 0 {
		this.TInt64 = 2
	}
	if this.TUint32 == 0 {
		this.TUint32 = 3
	}
	if this.TUint64 == 0 {
		this.TUint64 = 4
	}
	if this.TSint32 == 0 {
		this.TSint32 = 5
	}
	if this.TSint64 == 0 {
		this.TSint64 = 6
	}
	if this.TSfixed32 == 0 {
		this.TSfixed32 = 7
	}
	if this.TSfixed64 == 0 {
		this.TSfixed64 = 8
	}
	if this.TFixed32 == 0 {
		this.TFixed32 = 9
	}
	if this.TFixed64 == 0 {
		this.TFixed64 = 10
	}
	if this.TFloat == 0 {
		this.TFloat = 11.11
	}
	if this.TDouble == 0 {
		this.TDouble = 12.12
	}
	if !this.TBool {
		this.TBool = true
	}
	if this.TEnum1 == 0 {
		this.TEnum1 = 3
	}
	if this.TEnum2 == 0 {
		this.TEnum2 = 1
	}
	if this.TConfig1 == nil {
		this.TConfig1 = new(Config)
	}
	if this.TConfig1 != nil {
		if dt, ok := interface{}(this.TConfig1).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.TConfig2 != nil {
		if dt, ok := interface{}(this.TConfig2).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message godefaultstest.OptionalMessage1
func (this *OptionalMessage1) SetDefaults() {
	if this == nil {
		return
	}
	if this.TString1 == nil {
		x := string("ts1")
		this.TString1 = &x
	}
	if this.TString2 == nil {
		x := string("")
		this.TString2 = &x
	}
	if this.TString3 == nil {
		x := string("\"\"")
		this.TString3 = &x
	}
	if this.TString4 == nil {
		x := string("\"")
		this.TString4 = &x
	}
	if this.TString5 == nil {
		x := string("\"ts5\"")
		this.TString5 = &x
	}
	if this.TString6 == nil {
		x := string("\"ts\"6\"")
		this.TString6 = &x
	}
	if this.TString7 == nil {
		x := string("\"ts\"7\"")
		this.TString7 = &x
	}
	if this.TString8 == nil {
		x := string("[ts8]")
		this.TString8 = &x
	}
	if this.TString9 == nil {
		x := string("{ts9}")
		this.TString9 = &x
	}
	if this.TInt32 == nil {
		x := int32(0)
		this.TInt32 = &x
	}
	if this.TInt64 == nil {
		x := int64(2)
		this.TInt64 = &x
	}
	if this.TUint32 == nil {
		x := uint32(3)
		this.TUint32 = &x
	}
	if this.TUint64 == nil {
		x := uint64(4)
		this.TUint64 = &x
	}
	if this.TSint32 == nil {
		x := int32(5)
		this.TSint32 = &x
	}
	if this.TSint64 == nil {
		x := int64(6)
		this.TSint64 = &x
	}
	if this.TSfixed32 == nil {
		x := int32(7)
		this.TSfixed32 = &x
	}
	if this.TSfixed64 == nil {
		x := int64(8)
		this.TSfixed64 = &x
	}
	if this.TFixed32 == nil {
		x := uint32(9)
		this.TFixed32 = &x
	}
	if this.TFixed64 == nil {
		x := uint64(10)
		this.TFixed64 = &x
	}
	if this.TFloat == nil {
		x := float32(11.11)
		this.TFloat = &x
	}
	if this.TDouble == nil {
		x := float64(12.12)
		this.TDouble = &x
	}
	if this.TBool == nil {
		x := bool(true)
		this.TBool = &x
	}
	if this.TEnum1 == nil {
		x := Enum1(1)
		this.TEnum1 = &x
	}
	if this.TEnum2 == nil {
		x := Enum1(4)
		this.TEnum2 = &x
	}
	if this.TConfig1 == nil {
		this.TConfig1 = new(Config)
	}
	if this.TConfig1 != nil {
		if dt, ok := interface{}(this.TConfig1).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	if this.TConfig2 != nil {
		if dt, ok := interface{}(this.TConfig2).(interface{ SetDefaults() }); ok {
			dt.SetDefaults()
		}
	}
	return
}

// Set default value for message godefaultstest.ListMessage1
func (this *ListMessage1) SetDefaults() {
	if this == nil {
		return
	}
	if this.ArrayString1 == nil {
		this.ArrayString1 = []string{"s1", "s2, s4", "s3", ""}
	}
	if this.ArrayDouble == nil {
		this.ArrayDouble = []float64{1.1, 1.2, 1.3}
	}
	if this.ArrayFloat == nil {
		this.ArrayFloat = []float32{2.1, 2.2, 2.3}
	}
	if this.ArrayInt32 == nil {
		this.ArrayInt32 = []int32{10, 11, 12}
	}
	if this.ArrayInt64 == nil {
		this.ArrayInt64 = []int64{20, 21, 22}
	}
	if this.ArrayUint32 == nil {
		this.ArrayUint32 = []uint32{30, 31, 32}
	}
	if this.ArrayUint64 == nil {
		this.ArrayUint64 = []uint64{40, 41, 42}
	}
	if this.ArraySint32 == nil {
		this.ArraySint32 = []int32{50, 51, 52}
	}
	if this.ArraySint64 == nil {
		this.ArraySint64 = []int64{60, 61, 62}
	}
	if this.ArraySfixed32 == nil {
		this.ArraySfixed32 = []int32{70, 71, 72}
	}
	if this.ArraySfixed64 == nil {
		this.ArraySfixed64 = []int64{80, 81, 82}
	}
	if this.ArrayFixed32 == nil {
		this.ArrayFixed32 = []uint32{90, 91, 92}
	}
	if this.ArrayFixed64 == nil {
		this.ArrayFixed64 = []uint64{100, 101, 102}
	}
	if this.ArrayBool == nil {
		this.ArrayBool = []bool{true, false, true}
	}
	if this.ArrayEnum1 == nil {
		this.ArrayEnum1 = []Enum1{0, 1, 2}
	}
	if this.ArrayEnum2 == nil {
		this.ArrayEnum2 = []Enum1{3, 4, 8}
	}
	return
}

// Set default value for message godefaultstest.MapMessage1
func (this *MapMessage1) SetDefaults() {
	if this == nil {
		return
	}
	if this.MapStringString1 == nil {
		this.MapStringString1 = map[string]string{"k11": "v11", "k12": "v12"}
	}
	if this.MapStringString2 == nil {
		this.MapStringString2 = map[string]string{"": ""}
	}
	if this.MapInt32Double == nil {
		this.MapInt32Double = map[int32]float64{10: 10.1, 11: 10.2}
	}
	if this.MapInt32Float == nil {
		this.MapInt32Float = map[int32]float32{20: 20.1, 21: 20.2}
	}
	if this.MapInt32Int32 == nil {
		this.MapInt32Int32 = map[int32]int32{30: 1, 31: 11}
	}
	if this.MapInt32Int64 == nil {
		this.MapInt32Int64 = map[int32]int64{40: 2, 41: 12}
	}
	if this.MapInt32Uint32 == nil {
		this.MapInt32Uint32 = map[int32]uint32{50: 3, 51: 13}
	}
	if this.MapInt32Uint64 == nil {
		this.MapInt32Uint64 = map[int32]uint64{60: 4, 61: 14}
	}
	if this.MapInt32Sint32 == nil {
		this.MapInt32Sint32 = map[int32]int32{70: 5, 71: 15}
	}
	if this.MapInt32Sint64 == nil {
		this.MapInt32Sint64 = map[int32]int64{80: 6, 81: 16}
	}
	if this.MapInt32Sfixed32 == nil {
		this.MapInt32Sfixed32 = map[int32]int32{90: 7, 91: 17}
	}
	if this.MapInt32Sfixed64 == nil {
		this.MapInt32Sfixed64 = map[int32]int64{100: 8, 101: 18}
	}
	if this.MapInt32Fixed32 == nil {
		this.MapInt32Fixed32 = map[int32]uint32{110: 9, 111: 19}
	}
	if this.MapInt32Fixed64 == nil {
		this.MapInt32Fixed64 = map[int32]uint64{120: 10, 121: 20}
	}
	if this.MapInt32Bool == nil {
		this.MapInt32Bool = map[int32]bool{130: true, 131: false}
	}
	if this.MapInt32String == nil {
		this.MapInt32String = map[int32]string{140: "v1", 141: "v2"}
	}
	if this.MapInt32Enum1 == nil {
		this.MapInt32Enum1 = map[int32]Enum1{160: 0, 161: 1}
	}
	if this.MapInt32Enum2 == nil {
		this.MapInt32Enum2 = map[int32]Enum1{170: 3, 171: 4}
	}
	if this.MapInt64Int32 == nil {
		this.MapInt64Int32 = map[int64]int32{200: 100, 201: 101}
	}
	if this.MapUint32Int32 == nil {
		this.MapUint32Int32 = map[uint32]int32{210: 110, 211: 111}
	}
	if this.MapUint64Int32 == nil {
		this.MapUint64Int32 = map[uint64]int32{220: 120, 221: 121}
	}
	if this.MapSint32Int32 == nil {
		this.MapSint32Int32 = map[int32]int32{230: 130, 231: 131}
	}
	if this.MapSint64Int32 == nil {
		this.MapSint64Int32 = map[int64]int32{240: 140, 241: 141}
	}
	if this.MapFixed32Int32 == nil {
		this.MapFixed32Int32 = map[uint32]int32{250: 150, 251: 151}
	}
	if this.MapFixed64Int32 == nil {
		this.MapFixed64Int32 = map[uint64]int32{260: 160, 261: 161}
	}
	if this.MapSfixed32Int32 == nil {
		this.MapSfixed32Int32 = map[int32]int32{270: 170, 271: 171}
	}
	if this.MapSfixed64Int32 == nil {
		this.MapSfixed64Int32 = map[int64]int32{280: 180, 281: 181}
	}
	if this.MapStringInt32 == nil {
		this.MapStringInt32 = map[string]int32{"k1": 1000, "k2": 1001}
	}
	return
}

// Set default value for message godefaultstest.OneofMessag1
func (this *OneofMessag1) SetDefaults() {
	if this == nil {
		return
	}
	if this.OneofTyp1 == nil {
		this.OneofTyp1 = new(OneofMessag1_Oneof1Double)
	}
	switch v := this.OneofTyp1.(type) {
	case *OneofMessag1_Oneof1String1:
		if v.Oneof1String1 == "" {
			v.Oneof1String1 = "ts1"
		}
	case *OneofMessag1_Oneof1String2:
		if v.Oneof1String2 == "" {
			v.Oneof1String2 = ""
		}
	case *OneofMessag1_Oneof1String3:
		if v.Oneof1String3 == "" {
			v.Oneof1String3 = "\"\""
		}
	case *OneofMessag1_Oneof1String4:
		if v.Oneof1String4 == "" {
			v.Oneof1String4 = "\""
		}
	case *OneofMessag1_Oneof1String5:
		if v.Oneof1String5 == "" {
			v.Oneof1String5 = "\"ts5\""
		}
	case *OneofMessag1_Oneof1String6:
		if v.Oneof1String6 == "" {
			v.Oneof1String6 = "\"ts\"6\""
		}
	case *OneofMessag1_Oneof1String7:
		if v.Oneof1String7 == "" {
			v.Oneof1String7 = "\"ts\"7\""
		}
	case *OneofMessag1_Oneof1String8:
		if v.Oneof1String8 == "" {
			v.Oneof1String8 = "[ts8]"
		}
	case *OneofMessag1_Oneof1String9:
		if v.Oneof1String9 == "" {
			v.Oneof1String9 = "{ts9}"
		}
	case *OneofMessag1_Oneof1Double:
		if v.Oneof1Double == 0 {
			v.Oneof1Double = 1.1
		}
	case *OneofMessag1_Oneof1Float:
		if v.Oneof1Float == 0 {
			v.Oneof1Float = 1.2
		}
	case *OneofMessag1_Oneof1Int32:
		if v.Oneof1Int32 == 0 {
			v.Oneof1Int32 = 1
		}
	case *OneofMessag1_Oneof1Int64:
		if v.Oneof1Int64 == 0 {
			v.Oneof1Int64 = 2
		}
	case *OneofMessag1_Oneof1Uint32:
		if v.Oneof1Uint32 == 0 {
			v.Oneof1Uint32 = 3
		}
	case *OneofMessag1_Oneof1Uint64:
		if v.Oneof1Uint64 == 0 {
			v.Oneof1Uint64 = 4
		}
	case *OneofMessag1_Oneof1Sint32:
		if v.Oneof1Sint32 == 0 {
			v.Oneof1Sint32 = 5
		}
	case *OneofMessag1_Oneof1Sint64:
		if v.Oneof1Sint64 == 0 {
			v.Oneof1Sint64 = 6
		}
	case *OneofMessag1_Oneof1Fixed32:
		if v.Oneof1Fixed32 == 0 {
			v.Oneof1Fixed32 = 7
		}
	case *OneofMessag1_Oneof1Fixed64:
		if v.Oneof1Fixed64 == 0 {
			v.Oneof1Fixed64 = 9
		}
	case *OneofMessag1_Oneof1Sfixed32:
		if v.Oneof1Sfixed32 == 0 {
			v.Oneof1Sfixed32 = 10
		}
	case *OneofMessag1_Oneof1Sfixed64:
		if v.Oneof1Sfixed64 == 0 {
			v.Oneof1Sfixed64 = 11
		}
	case *OneofMessag1_Oneof1Bool:
		if !v.Oneof1Bool {
			v.Oneof1Bool = true
		}
	case *OneofMessag1_Oneof1Bytes1:
	case *OneofMessag1_Oneof1Bytes2:
	case *OneofMessag1_Oneof1Bytes3:
	case *OneofMessag1_Oneof1Enum1:
		if v.Oneof1Enum1 == 0 {
			v.Oneof1Enum1 = 8
		}
	case *OneofMessag1_Oneof1Enum2:
		if v.Oneof1Enum2 == 0 {
			v.Oneof1Enum2 = 3
		}
	case *OneofMessag1_Oneof1Config1:
		if v.Oneof1Config1 == nil {
			v.Oneof1Config1 = new(Config)
		}
		if v.Oneof1Config1 != nil {
			if dt, ok := interface{}(v.Oneof1Config1).(interface{ SetDefaults() }); ok {
				dt.SetDefaults()
			}
		}
	case *OneofMessag1_Oneof1Config2:
		if v.Oneof1Config2 != nil {
			if dt, ok := interface{}(v.Oneof1Config2).(interface{ SetDefaults() }); ok {
				dt.SetDefaults()
			}
		}
	default:
		_ = v // to avoid unused panic
	}
	switch v := this.OneofTyp2.(type) {
	case *OneofMessag1_Oneof2String1:
		if v.Oneof2String1 == "" {
			v.Oneof2String1 = "ts1"
		}
	case *OneofMessag1_Oneof2String2:
		if v.Oneof2String2 == "" {
			v.Oneof2String2 = ""
		}
	case *OneofMessag1_Oneof2String3:
		if v.Oneof2String3 == "" {
			v.Oneof2String3 = "\"\""
		}
	case *OneofMessag1_Oneof2String4:
		if v.Oneof2String4 == "" {
			v.Oneof2String4 = "\""
		}
	case *OneofMessag1_Oneof2String5:
		if v.Oneof2String5 == "" {
			v.Oneof2String5 = "\"ts5\""
		}
	case *OneofMessag1_Oneof2String6:
		if v.Oneof2String6 == "" {
			v.Oneof2String6 = "\"ts\"6\""
		}
	case *OneofMessag1_Oneof2String7:
		if v.Oneof2String7 == "" {
			v.Oneof2String7 = "\"ts\"7\""
		}
	case *OneofMessag1_Oneof2String8:
		if v.Oneof2String8 == "" {
			v.Oneof2String8 = "[ts8]"
		}
	case *OneofMessag1_Oneof2String9:
		if v.Oneof2String9 == "" {
			v.Oneof2String9 = "{ts9}"
		}
	case *OneofMessag1_Oneof2Double:
		if v.Oneof2Double == 0 {
			v.Oneof2Double = 1.1
		}
	case *OneofMessag1_Oneof2Float:
		if v.Oneof2Float == 0 {
			v.Oneof2Float = 1.2
		}
	case *OneofMessag1_Oneof2Int32:
		if v.Oneof2Int32 == 0 {
			v.Oneof2Int32 = 1
		}
	case *OneofMessag1_Oneof2Int64:
		if v.Oneof2Int64 == 0 {
			v.Oneof2Int64 = 2
		}
	case *OneofMessag1_Oneof2Uint32:
		if v.Oneof2Uint32 == 0 {
			v.Oneof2Uint32 = 3
		}
	case *OneofMessag1_Oneof2Uint64:
		if v.Oneof2Uint64 == 0 {
			v.Oneof2Uint64 = 4
		}
	case *OneofMessag1_Oneof2Sint32:
		if v.Oneof2Sint32 == 0 {
			v.Oneof2Sint32 = 5
		}
	case *OneofMessag1_Oneof2Sint64:
		if v.Oneof2Sint64 == 0 {
			v.Oneof2Sint64 = 6
		}
	case *OneofMessag1_Oneof2Fixed32:
		if v.Oneof2Fixed32 == 0 {
			v.Oneof2Fixed32 = 7
		}
	case *OneofMessag1_Oneof2Fixed64:
		if v.Oneof2Fixed64 == 0 {
			v.Oneof2Fixed64 = 9
		}
	case *OneofMessag1_Oneof2Sfixed32:
		if v.Oneof2Sfixed32 == 0 {
			v.Oneof2Sfixed32 = 10
		}
	case *OneofMessag1_Oneof2Sfixed64:
		if v.Oneof2Sfixed64 == 0 {
			v.Oneof2Sfixed64 = 11
		}
	case *OneofMessag1_Oneof2Bool:
		if !v.Oneof2Bool {
			v.Oneof2Bool = true
		}
	case *OneofMessag1_Oneof2Bytes1:
	case *OneofMessag1_Oneof2Bytes2:
	case *OneofMessag1_Oneof2Bytes3:
	case *OneofMessag1_Oneof2Enum1:
		if v.Oneof2Enum1 == 0 {
			v.Oneof2Enum1 = 2
		}
	case *OneofMessag1_Oneof2Enum2:
		if v.Oneof2Enum2 == 0 {
			v.Oneof2Enum2 = 3
		}
	case *OneofMessag1_Oneof2Config1:
		if v.Oneof2Config1 == nil {
			v.Oneof2Config1 = new(Config)
		}
		if v.Oneof2Config1 != nil {
			if dt, ok := interface{}(v.Oneof2Config1).(interface{ SetDefaults() }); ok {
				dt.SetDefaults()
			}
		}
	case *OneofMessag1_Oneof2Config2:
		if v.Oneof2Config2 != nil {
			if dt, ok := interface{}(v.Oneof2Config2).(interface{ SetDefaults() }); ok {
				dt.SetDefaults()
			}
		}
	default:
		_ = v // to avoid unused panic
	}
	return
}
